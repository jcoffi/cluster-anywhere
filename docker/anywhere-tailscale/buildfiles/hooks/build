#!/bin/bash

DOCKER_GCR_VER=2.1.14
DOCKER_GCR_OS=linux  # or "darwin" for OSX, "windows" for Windows.
DOCKER_GCR_ARCH=amd64  # or "386" for 32-bit OSs

export NUMEXPR_MAX_THREADS='$(nproc)'
#used by conda to specify cpus for building packages
export MAKEFLAGS='-j$(nproc)'
#used by conda
export CPU_COUNT='$(nproc)'

#export IMAGETYPE=$DOCKER_TAG




curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${DOCKER_GCR_VER}/docker-credential-gcr_${DOCKER_GCR_OS}_${DOCKER_GCR_ARCH}-${DOCKER_GCR_VER}.tar.gz" \
| tar xz docker-credential-gcr \
&& chmod +x docker-credential-gcr && mv docker-credential-gcr /usr/bin/

docker-credential-gcr configure-docker --registries=us-west4-docker.pkg.dev,us-docker.pkg.dev



# Set image type based on build argument
export IMAGETYPE=cpu
# This is done for reverse compatibiilty during testing.
export DOCKER_TAG=$IMAGETYPE
docker buildx build \
--push \
-t jcoffi/cluster-anywhere:$DOCKER_TAG \
--ulimit 'memlock=-1' \
--build-arg IMAGETYPE=$DOCKER_TAG .

docker tag jcoffi/cluster-anywhere:$DOCKER_TAG us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG \
&& docker push us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG


# Set image type based on build argument
export IMAGETYPE=gpu
export DOCKER_TAG=$IMAGETYPE
docker buildx build \
--push \
-t jcoffi/cluster-anywhere:$DOCKER_TAG \
--ulimit 'memlock=-1' \
--build-arg IMAGETYPE=$DOCKER_TAG .

docker tag jcoffi/cluster-anywhere:$DOCKER_TAG us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG \
&& docker push us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG

# Set image type based on build argument
export IMAGETYPE=cu118
export DOCKER_TAG=$IMAGETYPE
docker buildx build \
--push \
-t jcoffi/cluster-anywhere:$DOCKER_TAG \
--ulimit 'memlock=-1' \
--build-arg IMAGETYPE=$DOCKER_TAG .

docker tag jcoffi/cluster-anywhere:$DOCKER_TAG us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG \
&& docker push us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG

# Set image type based on build argument
export IMAGETYPE=cu112
export DOCKER_TAG=$IMAGETYPE
docker buildx build \
--push \
-t jcoffi/cluster-anywhere:$DOCKER_TAG \
--ulimit 'memlock=-1' \
--build-arg IMAGETYPE=$DOCKER_TAG .

docker tag jcoffi/cluster-anywhere:$DOCKER_TAG us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG \
&& docker push us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG

# Set image type based on build argument
export IMAGETYPE=cu116
export DOCKER_TAG=$IMAGETYPE
docker buildx build \
--push \
-t jcoffi/cluster-anywhere:$DOCKER_TAG \
--ulimit 'memlock=-1' \
--build-arg IMAGETYPE=$DOCKER_TAG .

docker tag jcoffi/cluster-anywhere:$DOCKER_TAG us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG \
&& docker push us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG

# # Set image type based on build argument
# docker buildx build \
# --push \
# -t jcoffi/cluster-anywhere:$DOCKER_TAG \
# --ulimit 'memlock=-1' \
# --build-arg IMAGETYPE=$DOCKER_TAG .

# docker tag jcoffi/cluster-anywhere:$DOCKER_TAG us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG \
# && docker push us-west4-docker.pkg.dev/cluster-anywhere/jcoffi/cluster-anywhere:$DOCKER_TAG


##--ulimit 'nofile=65535:65535' \
##--cache-from=rayproject/ray:latest-py310-$DOCKER_TAG \
##--cache-to type=registry,ref=jcoffi/cluster-anywhere:$DOCKER_TAG \
##--cache-from type=registry,ref=jcoffi/cluster-anywhere:$DOCKER_TAG \
##--cache-to type=s3,region=us-west-2,bucket=cluster-anywhere,name=latest-py310-$DOCKER_TAG-cache \
##--cache-from type=s3,region=us-west-2,bucket=cluster-anywhere,name=latest-py310-$DOCKER_TAG-cache \
